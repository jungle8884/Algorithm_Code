# include <cstdio> 
/*
* 卡拉兹猜想: 
	对任何一个自然数n, 如果它是偶数, 那么把它砍掉一半; 如果它是奇数, 那么把 (3n+1) 砍掉一半.
这样一直反复砍下去, 最后一定在某一步得到n=1. 卡拉兹在1905年的世界数学家大会上公布了这个猜想, 
传说当时耶鲁大学师生齐动员, 拼命想证明这个貌似很荒唐...
	此处并非要证明卡拉兹猜想, 而是对给定的任一不超过1000的正整数n, 
	简单地数一下, 需要多少步才能得到n=1?	 
	输入格式: 自然数n
	输出格式: 输出从n计算到1需要的步数 
*/
int main(){
	int n, step = 0;
	scanf("%d", &n);
	while(n != 1){
		if(n % 2 == 0) n = n / 2;	
		else n = (3 * n + 1) / 2;
		step++;
	}
	printf("%d\n", step);
	return 0;
} 

